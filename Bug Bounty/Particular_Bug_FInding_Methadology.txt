• Always try to chain vulnerability one to another  to increase the severity
• finding vulnerability is half the war and then selling that vulnerability is half war

1. XSS (Cross Site Scripting): 
• find paramter/enpoints/input fields
• try different payloads according to the waf

2. CSRF(Cross site request forgery):
• Allow's an attacker to perform an action they don't intend to perform
• delete a/c, change email, change password, if old password not req,
    add new role if role system exist, change normal information, last/first name, 
    change profile picture/delete it post xss to csrf
• CSRF Bypasses:    Delete token and send request with blank parameter
                    Delete token parameter
                    Change request from POST to GET
                    Change Body encoding
                    Replace token with random value
                    Delete referee or use this line in CSRF file | <meta name="referrer" content="no-referrer"> 
                    Use another user token
                    Changing one character in token, Content length bypass 

3. IDOR(Insecure direct object referance): 
• Attacker exploit this vulnerability to access unauthorize data by manupilating parameters in request
• Always required two accounts for ID paramters 
• check for id which seems in order, in victim account copy to attacker account and id response is 200 idor is successfull

4. SSRF(server side request forgery):
• It's a vulnerability that allows an attacker to cause the server-side application to make request to unintended location

5. OpenRedirect:
• Mostly leverage this vulnerability while loging/logout page may redirected to another page.
• Observe the url in burpsuite
• check out github file for eg: https://github.com/Raunaksplanet/My-CS-Store/blob/main/Bug%20Bounty/Open-Redirect-Example.txt

6. Account takeover:
• most vulnerable functionality is password reset 

7. Information Disclosure: 
• offten times happen due to IDOR or unsecured endpoint
• check the response and source code values that can be hardcoded

8. FIle upload vulnerability 
• Mostly found in support chat file upload 
• upload normal and file and intercept the request, file data can be changed to malicious content using burpsuite
• Some times using developer tool to change the file type from img to text can lead to xss due to less checking at backend.
